/*
 * coffeescript-ui - Coffeescript User Interface System (CUI)
 * Copyright (c) 2013 - 2016 Programmfabrik GmbH
 * MIT Licence
 * https://github.com/programmfabrik/coffeescript-ui, http://www.coffeescript-ui.org
*/

// header for "ng*"

$colors: (
	'red': (
		highlight: hsl(3, 100%, 47%),
		highlight-light: hsl(3, 100%, 86%)
	),
	'orange': (
		highlight: hsl(35, 100%, 46%),
		highlight-light: hsl(35, 100%, 85%)
	),
	'yellow': (
		highlight: hsl(48, 100%, 43%),
		highlight-light: hsl(48, 100%, 75%)
	),
	'green': (
		highlight: hsl(104, 69%, 48%),
		highlight-light: hsl(104, 80%, 82%)
	),
	'blue': (
		highlight: hsl(211, 100%, 41%),
		highlight-light: hsl(211, 100%, 85%)
	),
	'purple': (
		highlight: hsl(289, 65%, 67%),
		highlight-light: hsl(289, 100%, 92%)
	),
	'pink': (
		highlight: hsl(342, 100%, 58%),
		highlight-light: hsl(342, 100%, 87%)
	),
	'brown': (
		highlight: hsl(34, 27%, 50%),
		highlight-light: hsl(34, 49%, 86%)
	),
	'graphite': (
		highlight: hsl(240, 2%, 44%),
		highlight-light: hsl(240, 5%, 85%)
	)
);

$default-color: map-get($colors, 'blue');

@mixin variableList($color) {
	--highlight: #{map-get($color, 'highlight')};
	--highlight-light: #{map-get($color, 'highlight-light')};
	--highlight-light-transparent: #{transparentize(map-get($color, 'highlight-light'), 1)}; // needed for gradients from transparent .. highlight-light
	--on-highlight-color: white;
	--on-highlight-muted-color: #{desaturate(map-get($color, 'highlight-light'), 50%)};
	--on-highlight-border: #{lighten(desaturate(map-get($color, 'highlight'), 17%), 28%)};
	--on-highlight-light-muted-color: #{darken(desaturate(map-get($color, 'highlight-light'), 70%), 25%)};
	--on-highlight-light-secondary-color: #{darken(desaturate(map-get($color, 'highlight-light'), 75%), 40%)};
}

$padding: 10px;
// compensating padding compensates for line-height
$compensating-padding: 7px;
$gap: 10px;
$small-gap: 7px;
$background: hsl(205, 2%, 97%);
$foreground: white;
$border: hsl(205, 20%, 83%);
$soft-border: hsl(205, 20%, 91%);
$light-border: hsl(205, 18%, 95%);
$light-border-transparent: hsla(205, 20%, 50%, 0.1);
$color: hsl(0, 0%, 10%);
$font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
$font-size: 13px;
$line-height: 16px;

$secondary-color: hsl(205, 5%, 45%);
$muted-color: hsl(205, 5%, 60%);
$disabled-color: hsl(205, 7%, 73%);
$subtle-color: hsl(205, 10%, 79%);

$header-background: hsl(205, 13%, 87%);
$header-border: hsl(205, 6%, 75%);
$header-color: hsl(205, 8%, 30%);
$header-weight: 500;

$label-mini: 11px;
$label-big: 16px;
$label-bigger: 18px;
$form-block-color: hsl(210, 11%, 35%);

$button-background: white;
$button-pressed: hsl(205, 10%, 91%);
$button-active: hsl(205, 15%, 43%);
$button-active-text: white;
$button-active-border: hsl(205, 15%, 43%);
$button-active-pressed: darken($button-active, 9%);
$button-active-pressed-text: darken($button-active-text, 9%);
$button-active-pressed-border: darken($button-active-pressed, 5%);
$button-active-disabled-text: lighten($button-active, 17%);
$button-color: hsl(205, 8%, 34%);
$button-border: hsl(205, 10%, 75%);
$button-radius: 4px;
$button-height: 24px;
$button-font-size: $font-size;

$input-border: hsl(205, 20%, 79%);
$input-radius: $button-radius;
$input-placeholder: hsl(205, 10%, 75%);
$input-shadow: 0 1px hsla(0, 0%, 0%, 0.03) inset, 0 2px hsla(0, 0%, 0%, 0.01) inset;
$input-width: 275px;
// $input-background: $foreground;
$input-min-width: 100px;

$multi-output-tag-width: 18px;

$drag-handle-color: hsla(205, 10%, 50%, 0.5);

// Table Colors
$zebra-color: hsla(205, 41%, 20%, 0.04);
$zebra-on-foreground-color: hsl(210, 12%, 97%);
$table-header-border: hsl(205, 8%, 94%);
$table-row-border: $soft-border;

$table-data-height: 32px;
$table-data-padding: 4px;
$td-height: 18px;
$row-move-handle-width: $padding/2 + $table-data-padding*2+2;
$tree-node-handle-width: 14px;

$error-color: hsl(10, 90%, 52%);
$on-error-color: white;
$neutral-color: hsl(48, 100%, 58%);
$positive-color: hsl(100, 69%, 50%);

$layer-background: $foreground;

$popover-header-background: lighten($header-background, 3%);
$popover-header-border: lighten($header-border, 3%);

$item-list-color: hsl(205, 7%, 22%);
$item-list-hover: $button-pressed;
$item-list-pressed: $button-pressed;

$popover-hint-background: hsl(205, 20%, 30%);

@mixin margin($factor: 1) {
	margin-bottom: $padding * $factor;

	&:last-child {
		margin-bottom: 0;
	}
}

@mixin margin-top($factor: 1) {
	margin-top: $padding * $factor;

	&:first-child {
		margin-top: 0;
	}
}

@mixin padding($factor: 1) {
	padding: $padding * $factor;
}

@mixin padding-y($factor: 1) {
	padding-top: $padding * $factor;
	padding-bottom: $padding * $factor;
}

// Flex for selected TABLE
@mixin flex-table() {
	display: flex; // yes, this is fun :)
	box-sizing: border-box;
	flex: 0 0 auto;
	flex-direction: column;

	> tr {
		display: flex; // yes, this is fun :)
		box-sizing: border-box;
		flex: 1 1 auto;

		> td {
			display: flex; // yes, this is fun :)
			box-sizing: border-box;
			flex: 0 0 auto;
			flex-direction: column;
			align-items: stretch;
		}
	}
}

%icon {
	display: inline-block;
	font: normal normal normal 14px/1 FontAwesome;
	text-rendering: auto;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

@mixin icon($code) {
	@extend %icon;

	content: $code;
}

@mixin focus() {
	box-shadow: 0 0 0 3px var(--highlight-light);
	border-radius: $button-radius;
	z-index: 1; // put forward to see outline
}

@mixin inner-focus() {
	box-shadow: 0 0 0 3px var(--highlight-light) inset;
	border-radius: $button-radius;
	z-index: 1; // put forward to see outline
}

@mixin border-focus() {
	box-shadow: 0 0 0 3px var(--highlight-light);
	border-color: var(--highlight);
	z-index: 1; // put forward to see outline

	.cui-selected & {
		box-shadow: 0 0 0 3px var(--on-highlight-border);
	}
}

@mixin disable-focus() {
	&:focus {
		box-shadow: none !important;
	}
}

@mixin outer-focus() {
	box-shadow:
		0 0 0 1px var(--highlight),
		0 0 0 4px var(--highlight-light);
	z-index: 1; // put forward to see outline
}

//--------------------------------------------------------------------
@import '../../icons/_svg-dimensions.scss';

html {
	@include variableList($default-color);

	--top-header-background: #{$header-background};
}

@each $name, $color in $colors {
	[data-theme-color="#{$name}"] {
		@include variableList($color);
	}
}

// reset

table {
	border-collapse: collapse;
}

td {
	vertical-align: top;
	padding: 0;
	margin: 0;
}

kbd {
	padding: 1px 5px;
	display: inline-block;
	border: 1px solid hsl(0, 0%, 67%);
	background: white;
	border-radius: 2px;
	text-align: center;
}


label {
	box-sizing: border-box;
}


.css-swatch {
	width: 24px;
	height: 12px;
	box-shadow: 0 0 0 1px hsla(0, 0%, 0%, 0.14) inset;

	@each $color, $values in $colors {
		&.cui-swatch-color-#{$color} {
			background: map-get($values, 'highlight-light');
		}
	}
}

$drag-cursors: default, move, col-resize, row-resize, n-resize, e-resize, s-resize, w-resize, ne-resize, nw-resize, se-resize, sw-resize, ew-resize, ns-resize, nesw-resize, nwse-resize;

body[data-cursor] {
	-webkit-user-select: none;
	-ms-user-select: none;
	user-select: none;
}

@for $i from 1 to length($drag-cursors) {
	$cursor: nth($drag-cursors, $i);

	body[data-cursor="#{$cursor}"] * {
		cursor: $cursor !important;
	}
}

// special case with prefix
body[data-cursor='grabbing'] * {
	cursor: -webkit-grabbing !important;
	cursor: grabbing !important;
}

* {
	box-sizing: border-box;
}

li > div {
	display: inline-flex;
}


// Flexhandle

.cui-flex-handle-hidden {
	display: none;
}

.cui-flex-handle {
	position: relative;
	z-index: 2;
	flex-shrink: 0;
	-webkit-user-select: none;
	-ms-user-select: none;
	user-select: none;

	&.cui-flex-handle-has-label:not(.cui-flex-handle-closed) {
		.cui-label {
			display: none;
		}
	}
}

// Show the flex handle helper in IE because real time dragging is turned off because of performance reasons
.cui-browser-ie:not(.cui-browser-edge) {
	.cui-flex-handle.drag-drop-select-helper {
		&::after {
			content: '';
			top: 0;
			left: $padding - 1px;
			border-right: 3px dotted var(--highlight);
			height: 100%;
			opacity: 0.5;
			position: absolute;
		}
	}
}

.cui-flex-handle-row {
	width: 10px;
	margin: 0 -5px;

	&:not(.cui-flex-handle-closed) {
		cursor: ew-resize;
	}

	&.cui-flex-handle-closed {
		cursor: pointer;
		overflow: hidden;
	}

	&.cui-flex-handle-manual-size {
		// background-color: #64fdd8;
	}

	&.cui-flex-handle-has-label.cui-flex-handle-closed {
		width: 32px;
		margin: 0;
		background: white;

		.cui-label.cui-label-rotate-90 {
			font-size: 14px;
			margin: 11px 0;
			margin-left: -2px;

			.cui-label-transform {
				transform: rotate(-90deg) translateY(150%);
				transform-origin: left bottom;
			}
		}
	}
}

.cui-flex-handle-column {
	height: 10px;
	margin: -5px 0;
	width: 100%;

	&.cui-flex-handle-has-label.cui-flex-handle-closed {
		margin: 0;
	}

	&:not(.cui-flex-handle-closed) {
		cursor: ns-resize;
	}

	&.cui-flex-handle-closed {
		cursor: pointer;
	}
}


.cui-flex-handle-stretched {
	flex: 1 1 auto !important;
}

.cui-flex-handle-hide-for-stretch {
	display: none;
}

.cui-is-manually-sized {
	flex-grow: 0 !important;
	flex-shrink: 0 !important;

	& + .cui-flex-handle + * {
		flex-shrink: 1 !important;
	}
}


.cui-pane-fill-screen {
	transition: top ease-out 0.5s, right ease-out 0.5s, left ease-out 0.5s, bottom ease-out 0.5s;
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	z-index: 2;

	// Pane Fillscreen
	.cui-pane-fill-screen {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background-color: white;

		.cui-pane-fill-screen-inner {
			width: 100%;
			height: 100%;

			> .cui-maximize-vertical.cui-vertical-layout {
				height: 100%;
			}
		}
	}

	// overwrite "style" set by code
	&.cui-pane-fill-screen-is-on {
		top: 0 !important;
		left: 0 !important;
		bottom: 0 !important;
		right: var(--layer-sidebar-width) !important;
	}
}

// BorderLayout

.cui-border-layout-north,
.cui-border-layout-south,
.cui-border-layout-west,
.cui-border-layout-east {
	&:empty {
		display: none;
	}
}

.cui-border {
	border: 1px solid $border;
}

.cui-border-top {
	border-top: 1px solid $border;
}

.cui-border-bottom {
	border-bottom: 1px solid $border;
}

.cui-border-right {
	border-right: 1px solid $border;
}

.cui-border-left {
	border-left: 1px solid $border;
}


// Navigation Toolbar

.cui-navigation-toolbar {
	&--mini {
		background: none;
		min-height: 20px !important;

		.cui-horizontal-layout-left > .cui-label:first-child {
			color: hsl(205, 7%, 70%);
			font-weight: normal;
			padding-left: $padding/2;
			margin-right: 0;
		}

		.cui-buttonbar {
			margin-bottom: 2px;
		}

		.cui-button {
			padding: 0;
		}

		.cui-input {
			padding: 0 3px;
			font-size: 11px;
			line-height: 18px;
		}
	}

	> .cui-horizontal-layout-left {
		> .cui-label:last-child {
			margin-right: $padding;
		}
	}
}


// Icons
.cui-icon-svg {
	fill: currentColor;
	vertical-align: bottom;
	flex-shrink: 0;
	transform: translateZ(0); // make em icons sharp in Firefox

	use {
		pointer-events: none;
	}
}

.fa {
	font-size: 14px;
	// FIXME: why no pointer events? this breaks tooltips on icons
	// pointer-events: none;
}

.fa-spinner {
	width: 1em;
}

.fa-download {
	margin-top: (1em / 14); // move up by 10% of the font-size
}

.svg-spinner {
	height: 18px;
}

.cui-spin-stepped {
	animation: fa-spin 1s steps(8) infinite;
}

// adjust close x size
.fa-times-thin::before {
	font-size: 1.58em;
	content: '\00d7';
	display: block;
	margin-top: -0.09em;
}

// adjust arrow-left, arrow-right size
.fa-angle-right,
.fa-angle-left,
.fa-angle-down,
.fa-angle-double-down,
.fa-angle-up,
.fa-angle-double-up {
	&::before {
		font-size: 1.34em;
	}
}

.fa-angle-double-down {
	margin-top: 1px;
}

// compensate right arrow spacing
.fa-angle-right {
	margin-left: 2px;
}

// compensate left arrow spacing
.fa-angle-left {
	margin-right: 2px;
}

// compensate down arrow spacing
.fa-angle-down {
	margin-bottom: -1px;
}

.fa-play {
	margin-left: 1px; // aligns it with the stop button
}

// DataForm
.cui-data-form--movable-rows {
	max-width: 100%;

	> .cui-horizontal-layout > .cui-horizontal-layout-center {
		max-width: $input-width;
		overflow: visible; // show focus outline
	}

	&.cui-data-form--multiple-fields {
		> .cui-horizontal-layout > .cui-horizontal-layout-center {
			max-width: 100%;
		}
	}
}

.cui-data-form--multiple-fields {
	> .cui-data-form-row {
		> .cui-horizontal-layout-center {
			position: relative;
			padding: 4px 4px 4px 10px;
			border-left: 1px solid hsl(240, 8%, 87%);

			&::after,
			&::before {
				content: '';
				position: absolute;
				background: hsl(240, 8%, 87%);
				width: 10px;
				height: 1px;
				left: 0;
				top: 0;
			}

			&::after {
				top: auto;
				bottom: 0;
			}

			> .cui-data-field > .cui-form-table {
				margin: 0;
			}
		}
	}
}

.cui-data-form-row {
	overflow: visible !important;

	&--read-only {
		.cui-drag-handle-row {
			opacity: 0 !important;
		}
	}

	&:first-child {
		> .cui-horizontal-layout-center {
			margin-top: 0;
		}
	}

	&:last-child {
		// margin-bottom: $padding; anyoing in fields renderer
		> .cui-horizontal-layout-center {
			margin-bottom: 0;
		}
	}

	// &:only-child {
	// 	// make it as wide as the normal inputs
	// 	// as long as no trash bin is present
	// 	> .cui-horizontal-layout-right {
	// 		width: 9px;

	// 		> .cui-buttonbar {
	// 			display: none;
	// 		}
	// 	}
	// }

	&.cui-data-form-row--trash {
		> .cui-horizontal-layout-center {
			opacity: 0.5;
		}
	}

	> .cui-horizontal-layout-left {
		.cui-drag-handle-row {
			margin: 7px 7px 0 0;
			width: 12px;
			height: 10px;
			flex-grow: 0;
			cursor: -webkit-grab;
			cursor: grab;

			&.is-hidden {
				pointer-events: none;
				opacity: 0.33;
			}
		}
	}

	> .cui-horizontal-layout-center {
		margin-top: 0;
		margin-bottom: 5px;
		min-width: 0;
	}

	> .cui-horizontal-layout-right {
		width: 30px;

		.cui-button {
			margin-top: 1px;
			position: relative; // put forward

			&.cui-button-hidden {
				pointer-events: none;

				.cui-button-visual {
					opacity: 0.1;
				}
			}
		}

		.cui-button-visual {
			min-width: 0;
			padding: 0 5px;
			color: $drag-handle-color;
		}
	}
}


::-ms-clear {
	display: none;
}

.cui-layer-root[cui-layer-fixed] {
	position: fixed !important;
}

// Layer
.cui-layer-root {
	position: absolute;
	left: 0;
	top: 0;
	bottom: 0;
	right: 0;
	display: flex;
	align-items: center;
	justify-content: center;
	z-index: 2;
	pointer-events: none;

	.cui-layer {
		position: absolute;
		pointer-events: auto;
	}

	// centered gets placed by the browser
	&[cui-placement='c'] {
		.cui-layer {
			// position: static;
			// margin: $padding;
		}

		.cui-layer-pointer {
			display: none;
		}
	}

	&[cui-fill-space='both'] {
		.cui-layer {
			width: 100%;
			height: 100%;
		}
	}

	&[cui-fill-space='horizontal'] {
		.cui-layer {
			width: 100%;
		}
	}

	&[cui-fill-space='vertical'] {
		.cui-layer {
			height: 100%;
		}
	}
}

.cui-layer-backdrop-policy-modal,
.cui-layer-backdrop-policy-click {
	pointer-events: auto;
}

.cui-layer {
	min-width: 200px;
	min-height: 30px;
	margin: $padding;
	display: flex;
	flex-direction: column;
	background: $layer-background;
	outline: none;
	border-radius: 5px;
	overflow: auto; /* hidden; */
	box-shadow:
		0 0 0 1px hsla(205, 20%, 30%, 0.15),
		0 8px 10px 1px hsla(0, 0%, 0%, 0.14),
		0 3px 14px 2px hsla(0, 0%, 0%, 0.12),
		0 5px 5px -3px hsla(0, 0%, 0%, 0.4);

	// redundaten:? > .cui-simple-pane,
	> .cui-pane {
		// layer-header
		> .cui-vertical-layout-top > .cui-pane-header {
			border-radius: 5px 5px 0 0;
		}

		// layer-body
		> .cui-vertical-layout-center {
			overflow: auto;
			-webkit-overflow-scrolling: touch;

			> .cui-form {
				margin: 0;
			}

			> .cui-data-table {
				&:first-child > .cui-list-view {
					border: none;
					border-bottom: 1px solid $border;
				}

				&:only-child > .cui-list-view {
					border: none;
				}
			}
		}

		// layer-footer
		> .cui-vertical-layout-bottom > .cui-pane-footer {
			border-top-color: $header-border;
			background: $header-background;
			border-radius: 0 0 5px 5px;

			.cui-toolbar {
				background: none;
			}
		}
	}

	.cui-toolbar {
		min-height: $toolbar-height;
	}

	.cui-data-table .cui-pane-footer {
		min-height: 0;
	}

	.cui-form-table {
		&.cui-form-table-has-not-left-column {
			> .cui-tr > .cui-form-value > .cui-data-field {
				&.cui-data-table > .cui-list-view {
					border: none;
				}

				> .cui-list-view {
					margin: -15px -20px;
				}
			}
		}

		.cui-data-field {
			width: auto;
		}
	}

	.cui-form-button {
		.cui-button {
			max-width: 100%;
		}
	}

	.cui-data-field-input {
		min-width: 150px;

		&.cui-checkbox {
			min-width: 13px;
		}

		&.cui-data-table {
			min-width: 200px;
		}
	}

	.cui-list-view {
		.cui-data-field-input {
			min-width: 0;
		}
	}

	.cui-toolbar,
	.cui-buttonbar {
		.cui-data-field-input {
			min-width: 0;
		}
	}
}

$layer-sizes: (
	'xs': 400,
	's': 500,
	'm': 600,
	'l': 700,
	'xl': 800,
	'xxl': 900,
	'xxxl': 1000
);

@each $name, $width in $layer-sizes {
	.cui-layer--size-#{$name} {
		width: #{$width}px;
	}
}

.cui-layer-pointer {
	position: absolute;
	z-index: 1;
	width: 46px;
	height: 16px;
	margin: 6px;
	overflow: hidden;

	&::after { // arrow (north)
		content: '';
		position: absolute;
		width: 18px;
		height: 18px;
		background: $layer-background;
		transform: rotate(45deg);
		box-shadow:
			0 0 0 1px hsla(205, 20%, 30%, 0.15),
			4px 4px 10px 1px hsla(0, 0%, 0%, 0.14),
			1px 1px 14px 2px hsla(0, 0%, 0%, 0.12),
			2px 2px 5px -3px hsla(0, 0%, 0%, 0.4);
	}
}

.cui-layer-pointer--n,
.cui-layer-pointer--s {
	margin: 0 6px;
	height: 14px;

	&::after {
		top: 5px;
		left: 14px;
	}
}

.cui-pane--has-footer {
	.cui-layer-pointer--s::after {
		background: $header-background;
	}

	// make sure that white layer pointers on the side
	// only end above the footer
	.cui-layer-pointer--e,
	.cui-layer-pointer--w {
		margin-bottom: $toolbar-height;
	}
}

.cui-layer-pointer--s::after {
	top: -9px;
}

.cui-pane--has-header {
	// color northern layer pointer in header color
	.cui-layer-pointer--n::after {
		background: $header-background;
	}

	&.cui-layer-root-popover {
		.cui-layer-pointer--n::after {
			background: $popover-header-background;
		}
	}

	// make sure that white layer pointers on the side
	// only start below the header
	.cui-layer-pointer--e,
	.cui-layer-pointer--w {
		margin-top: $toolbar-height;
	}
}

.cui-layer-pointer--e,
.cui-layer-pointer--w {
	width: 12px;
	height: 46px;
	margin: 6px 0;

	&::after {
		left: 5px;
		top: 14px;
	}
}

.cui-layer-pointer--e::after {
	left: -11px;
}

.cui-layer-root-menu .cui-layer-pointer {
	height: 12px;

	&.cui-layer-pointer--e,
	&.cui-layer-pointer--w {
		width: 9px;
		height: 37px;

		&::after {
			top: 9px;
		}
	}

	&.cui-layer-pointer--n,
	&.cui-layer-pointer--s {
		&::after {
			left: 7px;
		}
	}

	&::after {
		background: white;
	}
}

.cui-layer-backdrop {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	display: flex;
	z-index: -1;

	&--visible {
		background: radial-gradient(hsla(205, 30%, 20%, 0.4), hsla(205, 30%, 20%, 0.6));
	}

	> div {
		flex: 1 1 auto;
		background-size: cover;
		background-repeat: no-repeat;
	}
}

.cui-layer-backdrop-body-clone {
	position: absolute;
	overflow: hidden;

	> *:first-child {
		position: absolute;
	}
}

.cui-layer-root.cui-layer-root-backdrop-blur {
	> .cui-layer-backdrop {
		-webkit-filter: blur(5px);
		-moz-filter: blur(5px);
		-ms-filter: blur(5px);
		filter: blur(5px);
		overflow: hidden;
	}

	> .cui-layer {
		// blur effect, make layer transparent
		background-color: rgba(255, 255, 255, 0.39);

		.cui-item-list-body {
			.cui-button {
				background-color: transparent;
			}
		}
	}
}

// Modal

.cui-modal {
	> .cui-simple-pane {
		// layer-footer
		> .cui-vertical-layout-bottom > .cui-pane-footer {
			border-radius: 0 0 5px 5px;
		}
	}
}

// Confirmation Dialog
.cui-confirmation-dialog {
	.cui-layer > .cui-layer-pane {
		> .cui-vertical-layout-center {
			max-width: 500px;

			// turn all labels into multiline labels
			.cui-label:not(.cui-label-markdown) {
				.cui-label-content {
					word-wrap: break-word;
					white-space: pre-wrap;
				}
			}
		}
	}
}

// detached from layer root, inline
.cui-layer.cui-confirmation-dialog--show-inline {
	// temp fix
	z-index: 1;
}

// Confirmation Choice
.cui-confirmation-choice {
	.cui-layer > .cui-layer-pane {
		> .cui-vertical-layout-center {
			max-width: 300px; // don't make this bigger, make the text shorter
		}
	}
}

// Alert Problem (red)
.cui-confirmation-dialog {
	.cui-alert-problem {
		> .cui-layer-pane {
			> .cui-vertical-layout-center {
				min-height: 66px;
				max-width: 375px;
				padding: 0 14px 0 74px;
				overflow-x: hidden;

				> :first-child {
					padding-top: 10px;
					margin-top: auto;
				}

				> :last-child {
					padding-bottom: 10px;
					margin-bottom: auto;
				}

				&::before {
					font-family: 'FontAwesome';
					content: '\f071';
					font-size: 42px;
					line-height: 1;
					color: $neutral-color;
					left: 14px;
					top: 14px;
					position: absolute;
				}
			}
		}
	}
}

.cui-alert {
	.cui-pane-footer .cui-button {
		min-width: 60px;
	}
}

// Spinner
.cui-spinner {
	min-width: 0;
}

// Tooltip
.cui-layer-root-tooltip .cui-layer-pointer {
	width: $padding / 2;
	height: $padding / 2;

	&::after {
		display: none;
	}
}

.cui-tooltip {
	max-width: 260px;
	// max-height: 100px;
	min-width: 0;
	min-height: 0;
	overflow: auto;
	-webkit-overflow-scrolling: touch;
	background: $layer-background;
	border-radius: 2px;
	box-shadow:
		0 0 0 1px hsla(0, 0%, 0%, 0.1),
		0 7px 14px hsla(0, 0%, 0%, 0.1);
	cursor: default;

	.cui-label {
		font-size: 11px;
		line-height: 14px;
		padding: 3px 6px;
	}

	> .cui-simple-pane > .cui-vertical-layout-center {
		padding: 0;

		> .cui-label:only-child {
			margin: 0;
		}
	}
}


// Toaster
.cui-layer-root-toaster .cui-layer {
	font-size: 14px;
	width: auto;
	max-width: none;
	min-width: 0;
	-webkit-user-select: none;
	-ms-user-select: none;
	user-select: none;
	cursor: default;

	> .cui-layer-pane > .cui-vertical-layout-center {
		padding: 7px $padding;
	}
}

.cui-select-menu {
	.cui-browser-firefox &,
	.cui-browser-ie & {
		overflow-y: scroll; // prevents overlap with scrollbar in Firefox & IE but adds a deactivated scrollbar when no scrollbar is neccesary
	}

	.cui-button {
		.cui-button-visual {
			display: inline;
		}

		.cui-button-left,
		.cui-button-center,
		.cui-button-right,
		.cui-label,
		.cui-label-content {
			display: inline;
		}
	}
}

// Popover

.cui-popover {
	background: $layer-background;
	min-width: 247px;
}

// Hint Popover

.cui-layer-root-hint-popover .cui-layer-pointer {
	height: 10px;
	width: 32px;

	&.cui-layer-pointer--e,
	&.cui-layer-pointer--w {
		width: 9px;
		height: 37px;

		&::after {
			top: 9px;
		}
	}

	&.cui-layer-pointer--n,
	&.cui-layer-pointer--s {
		&::after {
			left: 7px;
		}
	}

	&::after {
		top: 3px;
		background: $popover-hint-background;
		box-shadow: 3px 3px 14px hsla(0, 0%, 0%, 0.1);
	}
}

// WaitBlock
.cui-wait-block {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	z-index: 1;
	display: flex;
	color: $muted-color;
}

.cui-wait-block-glass {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	opacity: 0.5;
	background: $foreground;
}

.cui-wait-block-inner {
	display: flex;
	flex: 1 1 auto;
	position: relative;
}

.cui-wait-block-header {
	display: flex;
	flex: 1 1 auto;
	justify-content: center;
	align-self: center;

	.cui-label {
		.svg-spinner {
			height: auto;
			width: 28px;
		}

		.cui-label-content {
			padding-left: $padding;
		}
	}
}

.cui-wait-block-content {
	display: none;
}

// Tabs
.cui-tabs {
	.cui-tabs-active-marker {
		display: none;
		position: absolute;
		bottom: 0;
		// left + width are set by javascript
		height: 3px;
		background: yellow;
		transition: width 0.3s ease, left 0.3s ease;
	}

	> .cui-vertical-layout-center {
		flex-grow: 1;

		> .cui-tabs-bodies {
			display: flex;
			flex: 1 1 auto;
			overflow: hidden;
		}
	}

	&.cui-absolute > .cui-vertical-layout-center {
		top: $toolbar-height + 1px; // 1px border
	}

	> .cui-vertical-layout-center {
		> .cui-tabs-bodies {
			> .cui-tab-body.cui-tab--padded {
				padding: $padding;
			}
		}
	}
}

.cui-tabs-pane-header {
	min-height: $toolbar-height;
	background: $toolbar-background;

	&.cui-tabs-pane-header--mini {
		background: none;
		border-bottom-width: 0;
	}

	.cui-buttonbar {
		min-width: 0;
	}

	overflow: hidden;

	> .cui-horizontal-layout-center {
		flex-grow: 0;
		margin-right: 0;
	}

	/* overflowing tabs */
	&.cui-tabs-pane-header--overflow {
		> .cui-horizontal-layout-center {
			padding-right: 0;
			margin-right: 0;
			overflow: hidden !important; // overwrite toolbar > center overflow visible

			.cui-tab-header-button:last-child {
				padding-right: 0;

				.cui-button-visual {
					border-top-right-radius: 0;
					border-bottom-right-radius: 0;
					border-right: none;
				}
			}
		}
	}
}

.cui-tab {
	margin-left: 0 !important;
	display: flex;
	flex-direction: column;
	// border-bottom: 1px solid hsl(210,11%,93%); // no border bottom plz says Felix 19.10.16
	flex: 1 1 auto;
	overflow: auto;
	-webkit-overflow-scrolling: touch;

	&.cui-tab-hidden {
		display: none;
	}

	> .cui-empty-label:only-child {
		margin: $padding 0;
	}
}

.cui-toolbar .cui-tab-header-button-overflow,
.cui-toolbar .cui-tab-header-button {
	font-size: inherit;
	padding: 0;
	flex-shrink: 0;

	.cui-button-visual {
		background: none;
		color: $button-active;
		height: 26px;
		line-height: 24px;
		min-width: 40px;
		padding: 0 $padding;
		border: 1px solid;
	}

	&.cui-button-size-mini {
		.cui-button-visual {
			height: 24px;
			line-height: 23px;
		}
	}

	&:first-child .cui-button-visual {
		border-top-left-radius: 3px;
		border-bottom-left-radius: 3px;
	}

	&:last-child .cui-button-visual {
		border-top-right-radius: 3px;
		border-bottom-right-radius: 3px;
	}

	&.cui-active {
		.cui-button-visual {
			color: var(--on-highlight-color);
			background: $button-active;
			border-color: $button-active-border;
		}

		&:active {
			.cui-button-visual {
				color: $button-active-pressed-text;
				background: $button-active-pressed;
				border-color: $button-active-pressed-border;
			}
		}
	}

	&.cui-disabled {
		.cui-button-visual {
			color: lighten($button-active, 32%);
		}

		&:not(:first-child) {
			.cui-button-visual {
				border-left-color: $button-active;
			}
		}

		+ .cui-disabled {
			.cui-button-visual {
				border-left-color: currentColor;
			}
		}
	}
}

.cui-toolbar .cui-tab-header-button {
	&:first-child {
		padding-left: $padding;
	}

	&:last-child {
		padding-right: $padding;
	}
}

.cui-toolbar .cui-tab-header-button-overflow {
	padding-right: $padding;
}

.cui-toolbar {
	&.cui-tabs-pane-header--scroll-at-end {
		.cui-tab-header-button-overflow .cui-button-visual {
			box-shadow: none;
		}
	}

	.cui-tab-header-button-overflow {
		align-self: center;
		position: relative;
		z-index: 1; // to overlap active buttons

		.cui-button-visual {
			border-top-left-radius: 0 !important;
			border-bottom-left-radius: 0 !important;
			box-shadow:
				-1px 0 hsla(0, 0%, 0%, 0.1),
				-2px 0 hsla(0, 0%, 0%, 0.08),
				-3px 0 hsla(0, 0%, 0%, 0.05),
				-4px 0 hsla(0, 0%, 0%, 0.02),
				-5px 0 hsla(0, 0%, 0%, 0.01);
		}
	}
}

.cui-tabs--vertical {
	display: grid !important;
	grid-template-columns: 200px 1fr;
	grid-template-rows: 1fr auto;
	height: 100%;

	// IE support
	display: -ms-grid !important;
	-ms-grid-columns: 200px 1fr;
	-ms-grid-rows: 1fr auto;

	> .cui-vertical-layout-top {
		grid-row: span 2;
		-ms-grid-row-span: 2;
	}

	> .cui-vertical-layout-center {
		-ms-grid-column: 2;
	}

	> .cui-vertical-layout-bottom {
		-ms-grid-row: 2;
		-ms-grid-column: 2;
	}

	.cui-tabs-pane-header {
		border-bottom: none;
		padding: 0 !important;
		border-right: 1px solid $border;
		display: block;
		overflow: auto;
		height: 100%;

		> .cui-horizontal-layout-center {
			overflow: visible !important;
			display: block;
		}

		> .cui-horizontal-layout-right {
			display: none;
		}

		.cui-buttonbar,
		.cui-buttonbar-group {
			display: block;
		}
	}

	.cui-tabs-pane-header {
		.cui-buttonbar {
			padding: 10px;
		}
	}

	.cui-tab-header-button {
		padding: 0 !important;
		display: block;
		margin-left: 0 !important;
		margin-top: -1px;

		&:first-child .cui-button-visual {
			border-radius: 3px 3px 0 0;
			margin-top: 0;
		}

		&:last-child .cui-button-visual {
			border-radius: 0 0 3px 3px;
		}

		.cui-button-visual {
			height: 30px;
			line-height: 28px;
			justify-content: flex-start;
		}
	}
}


// Tree Node + Handle
.cui-tree-node {
	display: flex;
	flex: 1 1 auto;
	max-width: 100%;
	align-items: flex-start;
}

.cui-tree-node-handle,
.cui-tree-node-spacer {
	width: $tree-node-handle-width;
	flex: 0 0 auto;

	.fa-caret-right {
		width: 8px;
	}

	.svg-spinner {
		width: 10px;
		height: 10px;
	}
}

.cui-tree-node-handle {
	height: 18px;
	display: flex;
	text-align: center;
	// justify-content: flex-end; // conflict: left-align icons
	align-items: center;

	&.cui-tree-node-is-closed {
		cursor: pointer;
	}

	&.cui-tree-node-is-open {
		cursor: pointer;

		.fa {
			margin-top: 1px;
		}
	}
}

.cui-tree-node-content {
	display: flex;
	flex: 1 1 auto;
	flex-wrap: wrap;
	min-width: 50px; // prevent them from turning into scrabble when several are unfolded

	.cui-label {
		min-width: 0;
		flex-shrink: 1;
		// padding: 0; CONFLICT removes padding from tags that are inside node content

		.fa {
			line-height: 1;
		}
	}
}

.status-2d-map {
	border: 1px solid $table-border-color;
	display: table;

	.cui-block & .cui-td {
		&:first-child {
			padding-left: $padding;
		}

		&:last-child {
			padding-right: $padding;
		}
	}

	.cui-tr {
		&:nth-child(odd):not(:first-child) {
			background: $zebra-color;
		}

		&:first-child {
			.cui-td {
				border-bottom: 1px solid $table-border-color;
				position: relative;

				&:not(:last-child)::after {
					content: '';
					position: absolute;
					right: 0;
					margin: 3px 0;
					top: 0;
					bottom: 0;
					width: 1px;
					background: $table-border-color;
				}
			}
		}
	}
}

.cui-drag-drop-select-draggable,
.cui-drag-drop-select-sortable {
	cursor: -webkit-grab;
	cursor: grab;
}

.cui-drag-drop-select-lasso {
	cursor: default;
}

.cui-drag-drop-select-sortable,
.drag-drop-select-helper {
	.cui-data-field {
		max-width: none;
	}
}

// Drag & Drop

.cui-drag-drop-select-helper {
	position: absolute !important;
	z-index: 3 !important; // above drop helper
	pointer-events: none !important;

	* {
		pointer-events: none !important;
	}

	&.cui-tr {
		padding: 0;
	}
}

.cui-sortable-placeholder {
	opacity: 0;
}


// Droppable

.cui-droppable {
	// marks an active droppable
	// - in list views not neccesary because we have the droppable helper
	// opacity: 0.5;
}

.cui-droppable-drop-helper {
	box-shadow: 0 0 0 2px var(--highlight) inset;
	position: absolute;
	z-index: 2;
	pointer-events: none;
}

.cui-droppable-target-helper {
	//overwrite any other animation, its just temporary
	transition: transform 300ms ease !important;
}

.cui-droppable-target-helper-y--after {
	transform: translateY(-25%);
}

.cui-droppable-target-helper-y--before {
	transform: translateY(25%);
}

.cui-droppable-target-helper-x--after {
	transform: translateX(-25%);
}

.cui-droppable-target-helper-x--before {
	transform: translateX(25%);
}

// Movable
.cui-drag-drop-select-movable {
	cursor: -webkit-grab;
	cursor: grab;
}

// Resizable
.cui-drag-drop-select-resizable {
	position: relative;
}

.cui-resizable-handle {
	position: absolute;

	&.cui-resizable-handle-se {
		bottom: -8px;
		right: -8px;
		width: 16px;
		height: 16px;
		cursor: nwse-resize;
	}

	&.cui-resizable-handle-nw {
		top: -8px;
		left: -8px;
		width: 16px;
		height: 16px;
		cursor: nwse-resize;
	}

	&.cui-resizable-handle-sw {
		bottom: -8px;
		left: -8px;
		width: 16px;
		height: 16px;
		cursor: nesw-resize;
	}

	&.cui-resizable-handle-ne {
		right: -8px;
		top: -8px;
		width: 16px;
		height: 16px;
		cursor: nesw-resize;
	}

	&.cui-resizable-handle-s {
		left: 8px;
		right: 8px;
		bottom: -8px;
		height: 16px;
		cursor: ns-resize;
	}

	&.cui-resizable-handle-n {
		left: 8px;
		right: 8px;
		top: -8px;
		height: 16px;
		cursor: ns-resize;
	}

	&.cui-resizable-handle-e {
		right: -8px;
		top: 8px;
		bottom: 8px;
		width: 16px;
		cursor: ew-resize;
	}

	&.cui-resizable-handle-w {
		left: -8px;
		top: 8px;
		bottom: 8px;
		width: 16px;
		cursor: ew-resize;
	}
}


// Lasso
.cui-lasso-area {
	position: relative;
}

.cui-lasso {
	position: absolute;
	width: 1px;
	height: 1px;
	left: 0;
	top: 0;
	background-color: var(--highlight);
	display: block;
	pointer-events: none;
	z-index: 1;
	will-change: transform;
	transform-origin: left top;
	opacity: 0.33;
}

.cui-drag-drop-select-lasso-element-in-lasso {
	opacity: 0.8;
}

// StickyHeader

.cui-sticky-header {
	padding: 5px $padding;
	font-size: 13px;
	font-weight: bold;
	color: $color;
	flex-basis: 100%;
	flex-shrink: 0;
	border-bottom: 1px solid transparentize(darken($soft-border, 50%), 0.85);

	.cui-label {
		line-height: normal;
	}

	.cui-tab > & {
		flex-basis: auto;
	}
}

.cui-sticky-header-control {
	position: fixed;
	overflow: hidden;
	top: 0;
	left: 0;
	right: 0;
	height: 0;
	z-index: 1;

	.cui-sticky-header {
		position: absolute;
		left: 0;
		right: 0;
		font-weight: bold;
		background: hsla(0, 0%, 100%, 0.94);
	}
}

.cui-sticky-header-level-1,
.cui-sticky-header-level-2,
.cui-sticky-header-level-3,
.cui-sticky-header-level-4 {
	font-size: 11px;
}

// DigiDisplay

.cui-digi-display {
	// border: 1px solid black;
	align-self: flex-start;
	display: flex;

	> div {
		vertical-align: bottom;
		height: 20px;
		// border-right: 1px solid #c0c0c0;
		&:last-child {
			border-right: 0;
		}

		text-align: center;
		overflow: hidden;
		padding: 1px;
		font-family: monospace;
		font-size: 16px;
		line-height: 18px;
	}

	.cui-digi-display-digit {
		transition: margin-top 0.3s ease;
		height: 18px;
	}

	.cui-digi-display-static {
		height: 20px;
	}
}

// Space
.cui-space {
	margin: $padding;
	display: inline-block;

	&:empty {
		margin: $padding/2;
	}
}

.cui-small-space {
	margin: $padding/2;
	display: inline-block;

	&:empty {
		margin: $padding/4;
	}
}

.cui-large-space {
	margin: $padding*2;
	display: inline-block;

	&:empty {
		margin: $padding;
	}
}

.cui-flexible-space {
	flex: 1 1 auto;
}

// Console
.cui-console {
	padding: $padding;
	font-family: monospace;

	.cui-label-multiline {
		margin: 0;
	}

	.cui-label:not(:last-child) {
		border-bottom: 1px solid hsl(0, 0%, 94%);
	}
}

.cui-disabled {
	-webkit-user-select: none;
	-ms-user-select: none;
	user-select: none;
	opacity: 0.5;
	pointer-events: none;

	.cui-data-field-disabled & {
		opacity: 1;
	}
}

// CUI technical stuff
.cui-tmpl,
[data-template] {
	// hide all templates
	display: none !important;
}

@keyframes nodeInserted {
	from { opacity: 0.99; }
	to { opacity: 1; }
}

.cui-template-empty {
	&.cui-label {
		display: none !important;
	}
}

[hidden] {
	display: none !important;
}

.cui-google-map {
	width: 100%;
	height: 300px;
}

.cui-leaflet-map {
	width: 100%;
	height: 300px;
	overflow: hidden !important;

	.cui-vertical-layout-center {
		overflow: hidden !important;
	}

	.leaflet-container {
		background-color: hsl(41, 27%, 93%);
		background-size: 14px 14px;
		background-position: center;
		background-image:
			linear-gradient(to right, hsl(0, 0%, 98%) 1px, hsla(0, 0%, 0%, 0) 1px),
			linear-gradient(to bottom, hsl(0, 0%, 98%) 1px, hsla(0, 0%, 0%, 0) 1px);
	}
}

.cui-map-zoom-buttons {
	position: absolute;
	width: 100%;
	z-index: 1000;
	display: block;
	margin-top: 10px;

	.buttons-upper-left .cui-buttonbar {
		position: absolute;
		margin-left: 10px;
	}

	.buttons-upper-right .cui-buttonbar {
		position: absolute;
		right: 10px;
	}
}

.cui-map-popover-options {
	padding: 5px;
}

.leaflet-div-icon {
	background: none !important;
	border: none !important;
}

.cui-map-input {
	.cui-map-icon-popover-button {
		width: 30px;
	}
}

.cui-icon-marker-container {
	border: none;
	border-radius: 14px;
	text-align: center;
	margin-bottom: 5px;
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;

	.cui-icon-marker-arrow {
		position: absolute;
		left: 50%;
		top: 21px;
		transform: rotate(45deg);
		background: inherit;
	}

	.cui-button {
		position: absolute;
		left: 0;
		top: 0;
		width: 100%;
		z-index: 1;
		height: 100%;

		&:active .cui-button-visual {
			color: inherit;
		}

		&-visual {
			height: 100%;
			color: inherit;
		}
	}
}


/* This is set by Pane.coffee to compensate an active
   sidebar in the fillScreen calculations */
:root {
	--layer-sidebar-width: 0;
}
