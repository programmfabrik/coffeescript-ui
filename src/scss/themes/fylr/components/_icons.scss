@use "../variables" as v;


// Icons
.cui-icon-svg {
	fill: currentcolor;
	vertical-align: baseline; // was: bottom
	flex-shrink: 0;
	transform: translateZ(0); // make em icons sharp in Firefox

	use {
		pointer-events: none;
	}
}

.cui-no-icon {
	font-family: v.$font-family-sans-serif;
	font-weight: v.$font-weight-bold;
	font-style: normal; // reset <i> default style
	text-transform: uppercase;
}

.fa:not([class*='fa-stack']) {
	font-size: v.$icon-font-size;
	line-height: v.$icon-line-height;
}

.cui-spin-stepped {
	animation: fa-spin 1s steps(8) infinite;
}

// adjust close x size
.fa-times-thin::before {
	font-size: 1.58em;
	content: '\00d7';
	display: block;
	margin-top: -0.09em;
}

// adjust arrow-left, arrow-right size
.fa-angle-right,
.fa-angle-left,
.fa-angle-down,
.fa-angle-double-down,
.fa-angle-up,
.fa-angle-double-up {
	&::before {
		font-size: 1.34em;
	}
}

.fa-angle-double-down {
	margin-top: 1px;
}

// compensate right arrow spacing
.fa-angle-right {
	margin-left: 1px;
}

// compensate left arrow spacing
.fa-angle-left {
	margin-right: 1px;
}

// compensate down arrow spacing
.fa-angle-down::before {
	position: relative;
	top: 1px;
}

// compensate up arrow spacing
.fa-angle-up::before {
	position: relative;
	top: -1px;
}

// align with the stop button
.fa-play {
	margin-left: 1px;
}

//
.fa-bank {
	&::before {
		font-size: 0.9em;
	}
}

.svg-fylr-logo {
	width: 30px;
}

.svg-info-circle {
	width: 12px;
	height: 12px;
}

.svg-ruler {
	width: 16px;
	height: 16px;
}


// Hourglass animation
$hourglass-animation-speed: 0.6;
// if we want the colors to animate as well, use:
$hourglass-colors: v.$gray-800, v.$gray-800, v.$gray-900, v.$gray-800, v.$gray-900;

.cui-hourglass-animation {
	opacity: 1;

	$animation-spin: hourglass-spin ($hourglass-animation-speed * 4s) ease-out infinite;
  
	i {
		opacity: 0;
		line-height: inherit; // from fa-stack, makes animation smoother
		animation:
			hourglass ($hourglass-animation-speed * 4s) ease-in infinite,
			$animation-spin;
	}

	@for $i from 1 through 4 {
		& > i:nth-child(#{$i}) {
			// color: nth($hourglass-colors, $i);
			animation-delay: $hourglass-animation-speed * ($i - 1) * 1s, 0s;
		}
	}

	& > i:nth-child(4) {
		animation:
			hourglass-end ($hourglass-animation-speed * 4s) ease-in infinite,
			$animation-spin;
	}

	& > i:nth-child(5) {
		// color: nth($hourglass-colors, 5);
		opacity: 1;
		animation: $animation-spin;
	}
}

@keyframes hourglass {
	0% { opacity: 1; }
	24% { opacity: 0.9; }
	26% { opacity: 0; }
}

@keyframes hourglass-end {
	0% { opacity: 0; }
	70% { opacity: 0; }
	75% { opacity: 1; }
	100% { opacity: 1; }
}

@keyframes hourglass-spin {
	75% { transform: rotate(0deg); }
	100% { transform: rotate(180deg); }
}
