input,
textarea {
	appearance: none;
	width: 100%;
	min-width: $input-min-width;
	max-width: 100%;
	outline: none;
	font-size: inherit;
	background-color: $input-background;
	border: 1px solid $input-border-color;
	border-radius: $input-border-radius;
	padding: $input-padding-y $input-padding-x;
	flex: 1 1 auto;
	resize: vertical;
	vertical-align: bottom; // see listView demo

	&::placeholder {
		color: $input-placeholder-color;
	}

	// Password input placeholder should be regular body color
	&[placeholder^='***']::placeholder {
		color: $body-color;
	}

	&:focus {
		@include input-focus();
	}

	.cui-data-field-disabled & {
		background-color: $input-background-disabled;
	}

	// keep this exactly here, do not move into .cui-input selector
	&.cui-input-shadow {
		position: absolute;
		display: block;
		padding: 0;
		border: none;
		top: -1000px;
		left: -1000px;
	}
}

input {
	height: $input-height;
	line-height: $input-height;

	&[type='file'] {
		height: auto;
		line-height: $line-height-base;
		padding: $input-padding-y;
	}
}

textarea {
	--textarea-min-rows: 1;

	resize: none; // todo: bad UI ?
	min-height: calc(#{$line-height-base} * 1em * var(--textarea-min-rows) + #{$spacer-xs} + 2px); // 16px: Line height, 6px: padding, 2px: border.
	line-height: $line-height-base;
}

.cui-input {
	// state classes:
	// cui-input-invalid
	// cui-input-has-no-user-input
	// cui-input-has-user-input
	// cui-has-focus
	// cui-has-check-input
	//
	// hint:
	// cui-input-has-invalid-hint
	// cui-input-has-valid-hint
	// cui-input-has-input-hin:
	//

	&.cui-input-has-check-input {
		&.cui-input-invalid {
			input,
			.cui-data-field-right .cui-button .cui-button-visual {
				border-color: color.scale(theme-color('danger'), $saturation: 50%, $alpha: -95%);
				background: transparentize(theme-color('danger'), 0.85);


				.cui-list-view-row-selectable:hover &, 
				.cui-list-view-row-selectable.cui-selected & {
					border-color: transparent;
					background: color.scale(theme-color('danger'), $lightness: 50%);
				}
			}
		}
	}

	&.cui-maximize-vertical {
		display: flex;
		flex-direction: column;
	}

	// hint
	// + .cui-label {
	// 	@include label-form-hint();
	// }

	&.cui-input-appearance-code {
		input,
		textarea {
			font-family: $font-family-monospace;
			color: $teal; // todo
			background: gray('900');
			border-color: gray('900');

			&:focus {
				border-color: gray('900');
			}
		}
	}

	&:has(> .cui-input-control-element) {
		display: inline-flex;
		flex-direction: row;
	}
}

.cui-code-input pre {
	height: 400px;
	margin: auto;
	border: 1px solid $input-border-color;
	border-radius: $input-border-radius;

	&.ace_editor {
		border: 0;
	}
}

.cui-input-content-size {
	textarea {
		resize: none;
	}
}

// Multi input
.cui-multi-input .cui-multi-input-container {
	display: flex;
	flex-direction: column;
	align-items: stretch;
	flex: 1 1 auto;
	min-width: $input-min-width;
}

.cui-data-field-multi-input-center {
	flex: 1 1 auto;
}

.cui-multi-input-input {
	position: relative;
	display: flex;
	max-width: 100%;
	border-radius: $input-border-radius;

	+ .cui-multi-input-input {
		margin-top: $spacer-xs;
	}

	&.cui-data-field-hidden {
		display: none !important;
	}

	.cui-input,
	.cui-textarea {
		width: 100% !important;
		min-width: 0; // so that the [DE | EN] doesn't move outside the input area
		border-top-right-radius: 0;
		border-bottom-right-radius: 0;
	}
}

.cui-multi-input-tag-button {
	@include button-combobox();

	.cui-button-visual {
		.cui-button-center {
			@include button-combobox-center-icon();

			font-size: $font-size-sm;
			line-height: 1;
			padding: 0 $spacer-xs;
		}
	}
}

.cui-browser-ie:not(.cui-browser-edge) {
	.cui-input {
		input,
		textarea {
			min-height: 24px;

			&[data-max-chars] {
				min-height: 22px;
			}
		}
	}

	.cui-multi-input-input {
		input,
		textarea {
			min-height: 22px;
		}
	}
}

// DateTime Input
.cui-date-time {
	.cui-input-invalid-hint {
		display: none;
	}

	.cui-input {
		min-width: 90px; // date-short
	}

	/*

	date: "dd, DD.MM.YYYY"
	date-short: "DD.MM.YYYY"
	date-time: "dd, DD.MM.YYYY HH:mm"
	date-time-short = "DD.MM.YYYY HH:mm"
	date-time-seconds: "dd, DD.MM.YYYY HH:mm:ss"
	date-time-seconds-short: "DD.MM.YYYY HH:mm:ss"

	*/

	&[data-cui-date-time-format='date'] .cui-input {
		min-width: 112px;
	}

	&[data-cui-date-time-format='date-time-short'] .cui-input {
		min-width: 129px;
	}

	&[data-cui-date-time-format='date-time'] .cui-input,
	&[data-cui-date-time-format='date-time-seconds-short'] .cui-input {
		min-width: 150px;
	}

	&[data-cui-date-time-format='date-time-seconds'] .cui-input {
		min-width: 175px;
	}
}

// Password Inputs
.cui-input.cui-password {
	&:has(> .cui-input-control-element) {
		position: relative;
	}

	> .cui-button.cui-input-control-element {
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		z-index: 1;

		.cui-button-visual {
			--btn-border-width: 0;
			
			background: transparent !important;
			box-shadow: none !important;
		}
	}
}

// Color Input + Icon input (see Base Config > General)
.cui-color-input,
.cui-icon-input {
	> .cui-button {
		cursor: default;
		
		> .cui-button-visual {
			--btn-border-width: 0;
			--btn-background-hover: var(--btn-background);

			border-top-right-radius: 0;
			border-bottom-right-radius: 0;
		}
	}
}

// Color Input
.cui-color-input {
	> .cui-button.is-empty > .cui-button-visual {
		--btn-background: transparent;

		background: linear-gradient(135deg, $gray-200 0, $gray-200 50%, $gray-300 50.01%, $gray-300);
	}
}

// Icon input 
.cui-icon-input {
	> .cui-button {
		> .cui-button-visual {
			--btn-background: #{$input-background};

			border-right: 1px solid $hr-border-color;
		}

		&.is-empty .cui-button-left i {
			display: none;
		}
	}
}
