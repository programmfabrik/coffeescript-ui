// * StickyHeader

/*
<div class="cui-vertical-layout-center">
	<div class="cui-sticky-header-control"></div>
	...
	... scrolling
	...
	<div class="cui-sticky-header cui-sticky-header-level-0">
		<div class="cui-sticky-header-center"><span>...</span></div>
	</div>
	...
	... scrolling
	...
</div>
*/

.cui-sticky-header {
	// position: relative;
	padding: $spacer-xs 0;
	font-size: $sticky-header-font-size;
	font-weight: bold;
	color: $sticky-header-color;
	flex-basis: 100%;
	flex-shrink: 0;
	border-bottom: 1px solid var(--sticky-header-border-color, #{$sticky-header-border-color});
	background: var(--sticky-header-background, #{$sticky-header-background});
	visibility: visible !important;
	position: sticky;
	z-index: 10;

	&.is-stuck {
		// add opacity
		--sticky-header-background: #{$sticky-header-background-stuck};

		// hide this header if a sibling header is stuck as well
		&:has(~ .cui-sticky-header.is-stuck) {
			opacity: 0;
		}
	}

	&.cui-sticky-header-level-0 {
		top: calc(0px - 1px);
	}

	&.cui-sticky-header-level-1 {
		top: calc(27px - 1px);	// todo: calculate height in JS and add css variable to read out in CSS
	}
	
	&.cui-sticky-header-level-3 {
		top: calc(54px - 1px);	// todo: calculate height in JS and add css variable to read out in CSS
	}

	> .cui-sticky-header-center {
		@include text-truncate();
	}

	.cui-tab > & {
		flex-basis: auto;
	}

	.cui-table + & {
		margin-top: $spacer-sm;
	}
}

// Special cases within layout
.cui-vertical-layout-top,
.cui-vertical-layout-center,
.cui-vertical-layout-bottom {
	> .cui-sticky-header {
		flex-basis: auto;
	}
}

.cui-sticky-header-control {
	display: none; // hide initially to prevent grid gap from taking effect (e.g. standard view overlay)
	position: sticky !important;
	top: 0 !important;
	left: 0 !important;
	width: 100% !important;
	z-index: 1;
	overflow: hidden;

	&:has(.cui-sticky-header) {
		// display: block;
	}

	.cui-sticky-header {
		position: absolute;
		left: 0;
		right: 0;
		background: var(--sticky-header-background, #{$sticky-header-background});
	}
}

// 1. Level
.cui-sticky-header-level-0 {
	font-weight: $font-weight-bold;
}

// 2. Level
.cui-sticky-header-level-1,
.cui-sticky-header-level-2 {
	color: lighten(gray('700'), 10%);
}

// 3. Level
.cui-sticky-header-level-2 {
	font-weight: $font-weight-light;
	color: gray('700');
	letter-spacing: 0.03em;
}

/*
todo: 
- make absolute positionign of the headers within control obsolete 
	- we could do this with flexbox and order, but drawback is that header won't be "pushed" off screen by the next header
- optimize the "animation" when a new sticky header pushes out the old sticky header 
*/
