@use 'sass:color';
@use '../variables' as *;
@use '../mixins/text-truncate' as *;

// * StickyHeader

/*
<div class="cui-vertical-layout-center">
	<div class="cui-sticky-header-control"></div>
	...
	... scrolling
	...
	<div class="cui-sticky-header cui-sticky-header-level-0">
		<div class="cui-sticky-header-center"><span>...</span></div>
	</div>
	...
	... scrolling
	...
</div>
*/

.cui-sticky-header {
	position: relative;
	padding: $spacer-xs 0;
	font-size: $sticky-header-font-size;
	font-weight: bold;
	color: $sticky-header-color;
	flex-basis: 100%;
	flex-shrink: 0;
	border-bottom: 1px solid var(--sticky-header-border-color, #{$sticky-header-border-color});

	> .cui-sticky-header-center {
		@include text-truncate();
	}

	.cui-tab > & {
		flex-basis: auto;
	}

	.cui-table + & {
		margin-top: $spacer-sm;
	}
}

// Special cases within layout
.cui-vertical-layout-top,
.cui-vertical-layout-center,
.cui-vertical-layout-bottom {
	> .cui-sticky-header {
		flex-basis: auto;
	}
}

.cui-sticky-header-control {
	position: sticky;
	overflow: hidden;
	top: 0 !important;
	left: 0 !important;
	right: 0 !important;
	height: 0;
	width: 100% !important;
	z-index: 1;
	flex: 0 0 auto; // make sure header is visible when placed in flex-layout (see metadata-browser)

	// todo: do we need this ?
	// &:has(.cui-sticky-header) {
	// 	display: block;
	// }	

	.cui-sticky-header {
		position: absolute;
		left: 0;
		right: 0;
		font-weight: bold;
		background:
			linear-gradient(
				to top,
				var(--sticky-header-background-from, #{$sticky-header-background-body}) 30%,
				var(--sticky-header-background-to, #{$body-bg}) 50%
			);

		.cui-pane & {
			--sticky-header-background-from: #{$sticky-header-background-pane};
			--sticky-header-background-to: #{$pane-background};
		}
	}
}

// 1. Level
.cui-sticky-header-level-0 {
	font-weight: $font-weight-bold;
}

// 2. Level
.cui-sticky-header-level-1,
.cui-sticky-header-level-2 {
	color: color.adjust($gray-700, $lightness: 10%);
}

// 3. Level
.cui-sticky-header-level-2 {
	font-weight: $font-weight-light;
	color: $gray-700;
	letter-spacing: 0.03em;
}

/*
todo (nice-to-have): we could possibly further optimize here to reduce JS code
- make absolute positioning of the headers within control obsolete 
	-> we could do this with flexbox and order, but the drawback is that top header won't be "pushed" off the screen by the next header
- see https://tickets.programmfabrik.de/ticket/72867
*/
