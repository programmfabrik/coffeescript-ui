.cui-button,
.cui-button-href {
	cursor: pointer;
	text-decoration: none;
}

// Base button visual class, used in cui-button-button, cui-button-checkbox, cui-button-select...
.cui-button-visual {
	display: flex;
	align-items: center;
	justify-content: center;
	max-width: 100%;
	flex-grow: 1;
}

// .cui-button-button includes cui-button-href, which does NOT have the class cui-button
// almost all buttons have the class cui-button-button
.cui-button-button,
.cui-button-select {
	flex: 0 0 auto;
	align-items: center;
	justify-content: center;
	display: inline-flex; // if a button is not in a flex container, behave like "inline-block"
	white-space: nowrap;
	vertical-align: top; // prevents weird button jumping when its content changes from empty to filled with text

	.cui-button-visual {
		font-family: $btn-font-family;
		font-weight: $btn-font-weight;
		vertical-align: middle;
		user-select: none;

		// Button Content
		.cui-button-left,
		.cui-button-right {
			display: inline-flex;
			flex: 0 0 auto;
		}

		.cui-button-center {
			flex: 0 1 auto; // allow text-truncate
		}
	}

	@include button-md();
	@include button-color(transparent, $btn-color, $btn-bordered-hover-background, $btn-bordered-hover-color, $btn-bordered-active-background, $btn-bordered-active-color);

	// Modifier

	&.cui-button--primary {
		div:not(.cui-buttonbar-group) > & {
			@include button-primary();
		}
	}

	&.cui-button--secondary {
		div:not(.cui-buttonbar-group) > & {
			@include button-secondary();
		}
	}

	&.cui-button--danger {
		div:not(.cui-buttonbar-group) > & {
			@include button-danger();
		}
	}

	// submenu indicator
	&.cui-button--has-caret {
		.cui-button-visual {
			.cui-button-right {
				margin-left: auto;
			}
		}
	}
}

// type of cui-button-href that is rendered in a cui-item-list, see Asset.coffee
// .cui-button-download {}

.cui-button-href {
	&:not(.cui-button--primary):not(.cui-button--secondary):not(.cui-button-download) {
		@include button-link();
	}
}

// Reduce space between button text and caret
.cui-button-select,
.cui-button-button.cui-button--has-caret {
	&:not([role='menu-item']):not([button-group='date']):not([button-group='time']) {
		.cui-button-visual {
			.cui-button-center {
				padding-right: 0.5 * $btn-padding-x;
			}
		}
	}
}

.cui-button-select {
	// todo: add white background in forms? , adding it by default makes them idfferent from the normal buttons
	// @include button-color($input-background, $body-color, $input-background, $btn-hover-color, $btn-active-background, $btn-active-color);

	.cui-button-visual {
		.cui-button-center {
			[data-max-chars] {
				text-align: inherit;
				width: auto;
			}
		}
	}

	// todo: should this really be the default?
	.cui-data-field-input > & {
		width: 100%;
	}
}

// todo: remove appearance-link class
a[role='button'].cui-button-appearance-link {
	height: initial;

	> .cui-button-center {
		word-wrap: break-word;
	}
}

// Loading
.cui-button.cui-loading {
	animation: 1.2s pulse linear alternate infinite;
}

.cui-button.cui-disabled {
	--pointer-events-when-disabled: auto;

	cursor: default;
}

@keyframes pulse {
	from { opacity: 0.33; }
	to { opacity: 1; }
}

// Hidden
.cui-button-hidden {
	pointer-events: none;

	.cui-button-visual {
		opacity: $disabled-opacity;
	}
}

.cui-button-tool-play:not(.cui-button-tool-webdvdplayer) {
	@include button-play();
}

.cui-button-tool-webdvdplayer {
	@include button-color-inverted();
}

// Pin Button
// small pin icon button, with custom "strike-through"
// used e.g. to pin the result-card in detail; to pin facet blocks in the facet-manager
.cui-button-pin {
	width: $btn-height-sm; // make a large enough click target and leave enough room for the strike-through (::after)
	height: 18px;

	@include button-plain();
	@include button-xs();

	--btn-color: #{$gray-500};
	--btn-color-hover: #{$body-color};
	--btn-color-active: #{$body-color};
	--btn-background-active: transparent;
	--btn-through-color: #{$gray-500};

	.fa {
		font-size: 12px;
		line-height: 1;
	}

	.cui-button-visual {
		position: relative;

		&::after {
			content: '';
			display: block;
			position: absolute;
			top: 55%;
			left: 53%;
			width: 65%;
			height: 2px;
			border-bottom: 1px solid var(--btn-through-color-shadow, #{$white});
			transform: translateX(-50%) rotateZ(-42deg);
			transform-origin: center;
			background-color: var(--btn-through-color);
			z-index: 100;
		}
	}

	&:hover {
		.cui-button-visual::after {
			display: none;
		}
	}

	// pinned
	&.cui-active {
		--btn-through-color: var(--btn-color-active);

		.cui-button-visual::after {
			display: none;
		}

		&:hover .cui-button-visual::after {
			display: block;
		}
	}
}

.cui-button-goto-top {
	@include button-plain();

	--disabled-opacity: 0;
	--btn-background: #{$body-color};
	--btn-background-hover: #{$gray-800};
	--btn-color: #{$body-bg};
	--btn-color-hover: #{$body-bg};

	.cui-button-visual {
		border-radius: 45px;
		min-width: 30px;
		width: 30px;
		aspect-ratio: 1 / 1;
	}
}
