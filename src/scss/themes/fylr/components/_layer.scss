// Layer

/*
<div class="cui-layer-root cui-layer-root-layer">
	<div class="cui-layer-backdrop"></div>
	<div class="cui-layer">
		<div class="cui-simple-pane cui-vertical-layout cui-pane"> ... </div>
	</div>
	<div class="cui-layer-pointer"></div>
</div>
*/

.cui-layer-root {
	position: absolute;
	left: 0;
	top: 0;
	bottom: 0;
	right: 0;
	display: flex;
	align-items: center;
	justify-content: center;
	z-index: 2;
	pointer-events: none;

	&[cui-layer-fixed] {
		position: fixed !important;
	}

	.cui-layer {
		position: absolute;
		pointer-events: auto;
	}

	// centered gets placed by flex
	&[cui-placement='c'] {
		.cui-layer-pointer {
			display: none;
		}
	}

	&[cui-fill-space='both'] {
		.cui-layer {
			width: 100%;
			height: 100%;
		}
	}

	&[cui-fill-space='horizontal'] {
		.cui-layer {
			width: 100%;
		}
	}

	&[cui-fill-space='vertical'] {
		.cui-layer {
			height: 100%;
		}
	}
}


// * Backdrop

.cui-layer-backdrop {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	display: flex;
	z-index: -1;

	&--visible {
		background: radial-gradient(hsla(205, 30%, 20%, 0.4), hsla(205, 30%, 20%, 0.6));
	}

	> div {
		flex: 1 1 auto;
		background-size: cover;
		background-repeat: no-repeat;
	}
}

.cui-layer-backdrop-body-clone {
	position: absolute;
	overflow: hidden;

	> *:first-child {
		position: absolute;
	}
}

.cui-layer-root.cui-layer-root-backdrop-blur {
	> .cui-layer-backdrop {
		filter: blur(5px);
		overflow: hidden;
	}

	> .cui-layer {
		// blur effect, make layer transparent
		background-color: rgba($layer-background, 0.4);

		.cui-item-list-body {
			.cui-button {
				background-color: transparent;
			}
		}
	}
}

.cui-layer-backdrop-policy-modal,
.cui-layer-backdrop-policy-click {
	pointer-events: auto;
}

// * Layer

.cui-layer {
	// todo: the sizes are not really used anywhere, but lets keep the classes for now
	@each $name, $width in $layer-sizes {
		&--size-#{$name} {
			width: #{$width}px;
		}
	}

	display: flex;
	flex-direction: column;
	min-width: 300px;
	min-height: 30px;
	margin: $spacer-sm;
	background-color: $layer-background;
	outline: none;
	border-radius: $layer-border-radius;
	border: $layer-border-size solid $layer-border-color;
	overflow: auto; /* hidden; */
	box-shadow:
		inset 0 0 0 1px rgba($layer-border-color, 0.03),
		0 2px 4px 0 rgba($layer-shadow-color, 0.2),
		0 2px 7px 0 rgba($layer-shadow-color, 0.5),
		0 6px 20px 10px rgba($layer-shadow-color, 0.09);

	.cui-pane {
		background-color: transparent; // reset from cui-pane
	}
	
	> .cui-pane {
		// layer-header & toolbar
		> .cui-vertical-layout-top > .cui-pane-header,
		> .cui-vertical-layout-top > .cui-toolbar {
			&:not(.cui-template-empty) {
				padding: 0 $layer-padding-x;
			}
		}

		// layer header only
		> .cui-vertical-layout-top > .cui-pane-header {
			border-radius: $layer-border-radius $layer-border-radius 0 0;
			background-color: $layer-header-background;
			color: $layer-header-color;
			
			// Title
			.cui-horizontal-layout-left .cui-label {
				@include layer-title();
			}

			// Align buttonbar to the right because we use inverted, borderless buttons in the header
			> .cui-horizontal-layout-right > .cui-buttonbar {
				margin-right: -0.5*$layer-padding-x;
			}
			
			// Invert buttons
			.cui-button {
				@include button-inverted();

				&:not(:last-child) {
					margin-right: 0;
				}
			}

			// // add some white space if pane-header is empty
			// &.cui-template-empty {
			// 	display: block;
			// 	min-height: 0;
			// 	padding-bottom: 0;
			// 	background-color: transparent;
			// }

			// offset the following toolbar
			+ .cui-toolbar {
				margin-top: $spacer-sm;
			}
		}

		// layer-body
		> .cui-vertical-layout-center {
			padding: 0;
			margin: $layer-padding-y $layer-padding-x; // use margin instead of padding so a possible scrollbar will be inside
			overflow: auto;
			-webkit-overflow-scrolling: touch;
		}

		// layer-footer & toolbar
		> .cui-vertical-layout-bottom > .cui-pane-footer,
		> .cui-vertical-layout-bottom > .cui-toolbar {
			padding: 0 $layer-padding-y $layer-padding-x;
		}

		> .cui-vertical-layout-bottom > .cui-pane-footer {
			border-radius: 0 0 $layer-border-radius $layer-border-radius;

			// make buttons a little more prominent in the footer, they are typically "primary" action buttons ("OK" is pretty short otherwise)
			.cui-toolbar:not(.cui-navigation-toolbar) {
				.cui-button-visual {
					min-width: 60px;
				}
			}
		}

		// nested panes
		.cui-pane > .cui-vertical-layout-center {
			@include pane-padding-reset();
		}
	}

	.cui-form-table {
		.cui-data-field {
			width: auto;
		}
	}

	// todo: find use-case
	.cui-form-button {
		.cui-button {
			max-width: 100%;
		}
	}

	.cui-data-field-input {
		min-width: 150px;

		&.cui-checkbox {
			min-width: 1rem;
		}

		&.cui-data-table {
			min-width: 200px;
		}
	}

	.cui-list-view {
		.cui-data-field-input {
			min-width: 0;
		}
	}

	.cui-toolbar,
	.cui-buttonbar {
		.cui-data-field-input {
			min-width: 0;
		}
	}
}

// * Layer Pointer

.cui-layer-pointer {
	position: absolute;
	z-index: 1;
	width: $layer-pointer-container-size;
	height: $layer-pointer-size;
	margin: 6px;
	overflow: hidden;

	&::after { // arrow (north)
		content: '';
		position: absolute;
		width: $layer-pointer-size;
		height: $layer-pointer-size;
		background: $layer-pointer-background;
		transform: translate(-50%, -50%) rotate(45deg);
		box-shadow:
			inset 0 0 0 1px rgba($layer-shadow-color, 0.28),
			0 0 1px 0 rgba($layer-shadow-color, 0.43);
	}

	&--n,
	&--s {
		margin: 0 6px;
		height: $layer-pointer-size - 2px;

		&::after {
			left: 50%;
		}
	}

	&--n::after {
		top: 100%;
		background: $layer-header-background;
	}

	&--s::after {
		top: 0;
	}

	&--e,
	&--w {
		width: $layer-pointer-size - 2px;
		height: $layer-pointer-container-size;
		margin: 6px 0;

		&::after {
			top: 50%;
		}
	}

	&--e::after {
		left: 0;
	}

	&--w::after {
		left: 100%;
	}
}

// todo: find use-case
.cui-pane--has-footer {
	// make sure that white layer pointers on the side
	// only end above the footer
	.cui-layer-pointer--e,
	.cui-layer-pointer--w {
		margin-bottom: $toolbar-height;
	}
}

.cui-pane--has-header {
	// make sure that white layer pointers on the side
	// only start below the header
	.cui-layer-pointer--e,
	.cui-layer-pointer--w {
		margin-top: $toolbar-height;
	}
}

// * Select menu

// todo: check if we still need this
.cui-select-menu {
	.cui-browser-firefox &,
	.cui-browser-ie & {
		overflow-y: scroll; // prevents overlap with scrollbar in Firefox & IE but adds a deactivated scrollbar when no scrollbar is neccesary
	}
}


// * Autocompletion select menu

.cui-autocompletion-popup {
	background-color: $body-bg;

	> .cui-pane {
		// reset
		> .cui-vertical-layout-center {
			padding: 0;
		}
	}
}

// * Hint Popover
// see ez5-path-info-button

/*
	<div class="cui-layer cui-hint-popover [cui-hint-popover--padded]"></div>
*/

.cui-hint-popover {
	// todo: optimize, should not use extra padding class, try to style with context
	&.cui-hint-popover--padded {
		padding: $layer-padding-y $layer-padding-x;
	}
	
	.cui-table {
		border: 0;
	}

	+ .cui-layer-pointer {
		&::after {
			width: $layer-pointer-size;
			height: $layer-pointer-size;
		}
	}
}
