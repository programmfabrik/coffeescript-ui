// * Pane

// This is set by Pane.coffee to compensate an active sidebar in the fillScreen calculations
:root {
	--layer-sidebar-width: 0;
}

.cui-pane {
	background-color: $pane-background;

	// Padded
	// &--padded {
	// 	> .cui-vertical-layout-center {
	// 		padding: $pane-padding; // todo
	// 	}
	// }

	// todo: we should probably do this of this is the most used case, and then override if necessary
	> .cui-vertical-layout-center {
		padding: $pane-padding;
	}
}

.cui-pane-header {
	flex-wrap: nowrap;
	background-color: $body-bg;
	padding-left: 0;
	padding-right: 0;

	// make all labels a subtitle by default
	.cui-label {
		@include label-subtitle();
	}

	.cui-horizontal-layout-left {
		.cui-label {
			margin-right: $spacer-lg;
		}
	}

	.cui-buttonbar > * {
		margin-right: 0;
	}

	.cui-select {
		margin-right: $spacer-xs;
	}
}

.cui-pane-footer {
	.cui-horizontal-layout-left,
	.cui-horizontal-layout-right {
		min-width: auto;
	}

	.cui-label {
		// todo: footer label sizes and color?
	}
}


// .cui-pane--window {} // #legacy
// class is added in arbitrary templates, there is no Component Class that generates it, so it would be easy to just ignore this class in fylr and
// style this pane just like the general a cui-pane


// * Simple Pane

.cui-simple-pane {
	> .cui-vertical-layout-center {
		overflow: auto;
	}
}

// * Pane Fill Screen

.cui-pane-fill-screen {
	transition: top ease-out 0.5s, right ease-out 0.5s, left ease-out 0.5s, bottom ease-out 0.5s;
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	z-index: 2;

	// Pane Fillscreen
	.cui-pane-fill-screen {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background-color: $body-bg;

		.cui-pane-fill-screen-inner {
			width: 100%;
			height: 100%;

			> .cui-maximize-vertical.cui-vertical-layout {
				height: 100%;
			}

			// topmost header
			> .cui-pane > .cui-vertical-layout-top > .cui-pane-header {
				background-color: transparent;
				padding: $spacer-sm;
			}
		}
	}

	// overwrite "style" set by code
	&.cui-pane-fill-screen-is-on {
		top: 0 !important;
		left: 0 !important;
		bottom: 0 !important;
		right: var(--layer-sidebar-width) !important;
	}
}
