@mixin buttonbar-horizontal {
	flex-direction: row;

	> *:not(:last-child) {
		margin-right: $buttonbar-gap; // todo: maybe only apply margin if the child is a buttonbar-group (not a button, buttons should be closer together)
	}

	.cui-buttonbar-group {
		.cui-button,
		.cui-select {
			.cui-button-visual {
				border: $btn-border-width solid $body-color;
			}

			&:not(:last-child) .cui-button-visual {
				border-right: 0 !important;
			}

			&:first-child:not(:only-child) .cui-button-visual {
				border-top-right-radius: 0;
				border-bottom-right-radius: 0;
			}

			&:last-child:not(:only-child) .cui-button-visual {
				border-top-left-radius: 0;
				border-bottom-left-radius: 0;
			}

			&:not(:first-child):not(:last-child) .cui-button-visual {
				border-radius: 0;
			}
		}
	}
}

@mixin buttonbar-vertical() {
	flex-direction: column;
	align-items: flex-start;
	justify-content: center;

	> *:not(:last-child) {
		margin-bottom: $buttonbar-gap;
	}

	.cui-buttonbar-group {
		display: flex;
		flex-direction: column;
		align-items: flex-start;
		justify-content: center;

		.cui-button,
		.cui-select {
			.cui-button-visual {
				border: $btn-border-width solid $body-color !important;
			}

			&:not(:last-child) .cui-button-visual {
				border-bottom: 0 !important;
			}

			&:first-child:not(:only-child) .cui-button-visual {
				border-bottom-left-radius: 0;
				border-bottom-right-radius: 0;
				border-top-left-radius: $btn-border-radius;
				border-top-right-radius: $btn-border-radius;
			}

			&:last-child:not(:only-child) .cui-button-visual {
				border-top-left-radius: 0;
				border-top-right-radius: 0;
				border-bottom-left-radius: $btn-border-radius;
				border-bottom-right-radius: $btn-border-radius;
			}

			&:not(:first-child):not(:last-child) .cui-button-visual {
				border-radius: 0;
			}
		}
	}
}

@mixin buttonbar-horizontal-tight() {
	.cui-button {
		margin: 0;

		~ .cui-buttonbar-group {
			margin: 0 $buttonbar-gap;
		}
	}
}

@mixin buttonbar-vertical-tight() {
	.cui-button {
		margin: 0;

		~ .cui-buttonbar-group {
			margin: $buttonbar-gap 0;
		}
	}
}

@mixin buttonbar-group-navigation($border: 0) {	
	// use separate border to cirumvent border styles on hover for the inverted buttons
	@include ungroup-visually();

	@if $border == 1 {
		--border-color: #{$btn-border-color};

		position: relative;

		&::after {
			content: '';
			position: absolute;
			display: block;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			pointer-events: none;
			border-radius: $btn-border-radius;
			border: 1px solid var(--border-color);
		}
	}
}

@mixin buttonbar-group-navigation-sm() {
	.cui-button-button {
		@include button-sm();
	}

	.cui-label {
		@include label-sm();

		line-height: 1;
		padding: 0;
	}

	.cui-number-input input {
		@include input-sm();
	}
}

@mixin buttonbar-group-navigation-inverted($border: 0) {
	@include buttonbar-group-navigation($border);
	
	.cui-button-button {
		@include button-inverted();
	}
	
	.cui-label,
	.cui-number-input {
		color: $btn-inverted-color;
		background-color: $btn-inverted-background;
	}

	@if $border == 1 {
		--border-color: #{$btn-inverted-border-color};
	}
}

// Helper
@mixin ungroup-visually($inverted: 0) {
	.cui-button-visual {
		border: 0 !important;
		border-radius: $btn-border-radius !important;
	}

	.cui-button:hover .cui-button-visual {
		@if $inverted == 1 {
			background-color: $btn-inverted-hover-background;
			color: $btn-inverted-hover-color;
		}
		@else {
			background-color: $btn-hover-background;
			color: $btn-hover-color;
		}
	}
}

@mixin ungroup-visually-inverted() {
	@include ungroup-visually(1);
}
